name: Release docker
on:
  workflow_call:
    inputs:
      plan:
        required: false
        type: string
jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      # - name: Set up QEMU
      #   uses: docker/setup-qemu-action@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Docker meta
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: |
            ${{ github.repository }}
            ghcr.io/${{ github.repository }}
          tags: |
            type=sha,format=short
            type=edge,branch=main
            type=semver,pattern={{version}}
            type=semver,pattern={{major}}.{{minor}}
            type=semver,pattern={{major}},enable=${{ !contains(github.ref, 'v0.') }}
            type=ref,enable=true,priority=600,prefix=br-,event=branch
            type=ref,enable=true,priority=600,prefix=,event=tag
            type=ref,enable=true,priority=600,prefix=pr-,event=pr

      - name: Docker meta (alpine)
        id: meta-alpine
        uses: docker/metadata-action@v5
        with:
          flavor: suffix=-alpine
          images: |
            ${{ github.repository }}
            ghcr.io/${{ github.repository }}
          tags: |
            type=sha,format=short
            type=edge,branch=main
            type=semver,pattern={{version}}
            type=semver,pattern={{major}}.{{minor}}
            type=semver,pattern={{major}},enable=${{ !contains(github.ref, 'v0.') }}
            type=ref,enable=true,priority=600,prefix=br-,event=branch
            type=ref,enable=true,priority=600,prefix=,event=tag
            type=ref,enable=true,priority=600,prefix=pr-,event=pr

      - name: Login to GitHub Container Registry
        uses: docker/login-action@v3
        if: ${{ !env.ACT }}
        with:
          registry: ghcr.io
          username: ${{ github.repository_owner }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Login to DockerHub
        uses: docker/login-action@v3
        if: ${{ !env.ACT }}
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Build and push (alpine)
        uses: docker/build-push-action@v3
        with:
          context: .
          platforms: |
            linux/arm64
            linux/amd64
          push: ${{ !env.ACT }}
          file: Dockerfile.alpine
          tags: ${{ steps.meta-alpine.outputs.tags }}
          labels: ${{ steps.meta-alpine.outputs.labels }}
          cache-from: type=gha
          cache-to: type=gha,mode=max

      - name: Build and push
        uses: docker/build-push-action@v3
        with:
          context: .
          platforms: |
            linux/arm64
            linux/amd64
          push: ${{ !env.ACT }}
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          cache-from: type=gha
          cache-to: type=gha,mode=max
